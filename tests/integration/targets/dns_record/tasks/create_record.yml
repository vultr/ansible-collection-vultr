# Copyright (c) 2021, Ren√© Moser <mail@renemoser.net>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: setup dns record absent
  vultr.cloud.dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    record_type: "{{ item.record_type | default(omit) }}"
    state: absent

- name: test create a dns record in check mode
  vultr.cloud.dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.data }}"
    ttl: "{{ item.ttl | default(omit) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    priority: "{{ item.priority | default(omit) }}"
  check_mode: True
  register: result
- name: verify test create a dns record in check mode
  ansible.builtin.assert:
    that:
      - result is changed

- name: test create a dns record
  vultr.cloud.dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.data }}"
    ttl: "{{ item.ttl | default(omit) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    priority: "{{ item.priority | default(omit) }}"
  register: result
- name: verify test create a dns record
  ansible.builtin.assert:
    that:
      - result is changed
      - result.vultr_dns_record.data == "{{ item.data }}"
      - result.vultr_dns_record.name == "{{ item.name | default("") }}"
      - result.vultr_dns_record.type == "{{ item.record_type | default('A') }}"
      - result.vultr_dns_record.ttl == {{ item.ttl | default(300) }}
      - result.vultr_dns_record.priority == {{ item.priority | default(-1) }}

- name: test create a dns record idempotence
  vultr.cloud.dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.data }}"
    ttl: "{{ item.ttl | default(omit) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    priority: "{{ item.priority | default(omit) }}"
  register: result
- name: verify test create a dns record idempotence
  ansible.builtin.assert:
    that:
      - result is not changed
      - result.vultr_dns_record.data == "{{ item.data }}"
      - result.vultr_dns_record.name == "{{ item.name | default("") }}"
      - result.vultr_dns_record.type == "{{ item.record_type | default('A') }}"
      - result.vultr_dns_record.ttl == {{ item.ttl | default(300) }}
      - result.vultr_dns_record.priority == {{ item.priority | default(-1) }}
