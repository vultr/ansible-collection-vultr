---
- name: cleanup
  when: vultr_api_key is defined and vultr_api_key != ''
  block:
    - name: List startup-scripts
      ansible.builtin.uri:
        url: "{{ vultr_api_url }}/startup-scripts?per_page={{ vultr_api_results_per_page }}"
        headers:
          Authorization: Bearer {{ vultr_api_key }}
        status_code: 200
      register: initial_res
      no_log: true

    - name: Page through subsequent results
      ansible.builtin.uri:
        url: "{{ vultr_api_url }}/startup-scripts?per_page={{ vultr_api_results_per_page }}&cursor={{ res.json.meta.links.next | default(initial_res.json.meta.links.next) }}"
        headers:
          Authorization: Bearer {{ vultr_api_key }}
        status_code: 200
      register: res
      loop: "{{ range(1, ((initial_res.json.meta.total | int) / (vultr_api_results_per_page | int)) | round(0, 'ceil') | int) | list }}"
      when: initial_res.json.meta.links.next != ''
      no_log: true

    - name: Compile results
      ansible.builtin.set_fact:
        startup_scripts: "{{ initial_res.json.startup_scripts + (res.results | map(attribute='json') | map(attribute='startup_scripts') | flatten) }}"

    - name: Found resources
      ansible.builtin.debug:
        var: startup_scripts

    - name: Remove all startup-scripts created by this test run
      ansible.builtin.uri:
        url: "{{ vultr_api_url }}/startup-scripts/{{ item.id }}"
        method: "DELETE"
        headers:
          Authorization: Bearer {{ vultr_api_key }}
        status_code: 204
      when: vultr_resource_prefix in item.name
      with_items: "{{ startup_scripts }}"
      loop_control:
        label: "{{ item.name }}"
      no_log: true
