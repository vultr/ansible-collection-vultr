- name: Check if load balancer already exists
  vultr.cloud.load_balancer_info:
  register: lb_info

- name: Assert at least one load balancer exists
  ansible.builtin.assert:
    that:
      - lb_info.vultr_load_balancer_info is defined
      - lb_info.vultr_load_balancer_info is iterable

- name: Print all load balancer info
  ansible.builtin.debug:
    var: lb_info.vultr_load_balancer_info

- name: Create a load balancer
  block:
    - name: Create a load balancer
      vultr.cloud.load_balancer:
        region: ewr
        label: test-load-balancer
        state: present
        balancing_algorithm: roundrobin
        ssl_redirect: false
        http2: false
        http3: false
        proxy_protocol: false
        timeout: 600
        nodes: 1
        health_check:
          protocol: http
          port: 80
          path: /health
          check_interval: 10
          response_timeout: 5
          unhealthy_threshold: 3
          healthy_threshold: 3
        forwarding_rules:
          - frontend_protocol: http
            frontend_port: 80
            backend_protocol: http
            backend_port: 80
        firewall_rules:
          - port: 80
            source: 0.0.0.0/0
            ip_type: v4
        global_regions:
      register: result

    - name: Assert load balancer creation was successful
      ansible.builtin.assert:
        that:
          - result.changed == true
          - result.failed == false
  when: >
    lb_info.vultr_load_balancer_info is not defined or
    (lb_info.vultr_load_balancer_info | selectattr('label', 'equalto', 'test-load-balancer') | list | length) == 0

- name: Update the load balancer
  vultr.cloud.load_balancer:
    name: test-load-balancer
    label: test-load-balancer
    region: ewr
    state: present
    forwarding_rules:
      - frontend_protocol: http
        frontend_port: 80
        backend_protocol: http
        backend_port: 8080
      - frontend_protocol: http
        frontend_port: 443
        backend_protocol: http
        backend_port: 8443
    # balancing_algorithm: leastconn
    # ssl_redirect: false
    # http2: false
    # http3: false
    nodes: 3
    # timeout: 600
    # health_check:
    #   protocol: http
    #   port: 80
    #   path: /health
    #   check_interval: 20
    #   response_timeout: 10
    #   unhealthy_threshold: 5
    #   healthy_threshold: 2
    # proxy_protocol: true
    # sticky_session: {}
    # instances: []
    # vpc: ""
    # firewall_rules: []
    # auto_ssl: {}
    # global_regions: []
  register: result

- name: Assert load balancer update was successful
  ansible.builtin.assert:
    that:
      - result.changed == true
      - result.failed == false

- name: Delete the load balancer
  vultr.cloud.load_balancer:
    name: test-load-balancer
    region: ewr
    state: absent
  register: result

- name: Assert load balancer deletion was successful
  ansible.builtin.assert:
    that:
      - result.changed == true
      - result.failed == false
