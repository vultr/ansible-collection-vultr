# Disabling update test until the module is fixed
# - name: Create a load balancer
#   vultr.cloud.load_balancer:
#     region: "{{ load_balancer_defaults.region | default(omit) }}"
#     label: "{{ load_balancer_defaults.label | default(omit) }}"
#     state: "{{ load_balancer_defaults.state | default(omit) }}"
#     balancing_algorithm: "{{ load_balancer_defaults.balancing_algorithm | default(omit) }}"
#     ssl_redirect: "{{ load_balancer_defaults.ssl_redirect | default(omit) }}"
#     http2: "{{ load_balancer_defaults.http2 | default(omit) }}"
#     http3: "{{ load_balancer_defaults.http3 | default(omit) }}"
#     proxy_protocol: "{{ load_balancer_defaults.proxy_protocol | default(omit) }}"
#     timeout: "{{ load_balancer_defaults.timeout | default(omit) }}"
#     nodes: "{{ load_balancer_defaults.nodes | default(omit) }}"
#     health_check: "{{ load_balancer_defaults.health_check | default(omit) }}"
#     forwarding_rules: "{{ load_balancer_defaults.forwarding_rules | default(omit) }}"
#     firewall_rules: "{{ load_balancer_defaults.firewall_rules | default(omit) }}"
#     global_regions: "{{ load_balancer_defaults.global_regions | default(omit) }}"
#   register: result

# - name: Assert load balancer creation was successful
#   ansible.builtin.assert:
#     that:
#       - result is changed
#       - result is not failed

- name: Check if load balancer exists
  vultr.cloud.load_balancer_info:
  register: lb_info

- name: Print all load balancer info
  ansible.builtin.debug:
    var: lb_info.vultr_load_balancer_info

# - name: Assert load balancer exists
#   ansible.builtin.assert:
#     that:
#       - lb_info.vultr_load_balancer_info is defined
#       - lb_info.vultr_load_balancer_info | selectattr('label', 'equalto', load_balancer_defaults.label) | list | count == 1

# - name: Update the load balancer
#   vultr.cloud.load_balancer:
#     name: "{{ load_balancer_defaults.label | default(omit) }}"
#     label: "{{ load_balancer_defaults.label | default(omit) }}"
#     region: "{{ load_balancer_defaults.region | default(omit) }}"
#     state: "{{ load_balancer_defaults.state | default(omit) }}"
#     proxy_protocol: "{{ load_balancer_defaults.proxy_protocol | default(omit) }}"
#     forwarding_rules:
#       - frontend_protocol: http
#         frontend_port: 80
#         backend_protocol: http
#         backend_port: 8080
#       - frontend_protocol: http
#         frontend_port: 443
#         backend_protocol: http
#         backend_port: 8443
#     nodes: 3
#   register: result

# - name: Assert load balancer update was successful
#   ansible.builtin.assert:
#     that:
#       - result.changed == true
#       - result.failed == false

# - name: Delete the load balancer
#   vultr.cloud.load_balancer:
#     name: "{{ load_balancer_defaults.label | default(omit) }}"
#     region: "{{ load_balancer_defaults.region | default(omit) }}"
#     state: absent
#   register: result

# - name: Assert load balancer deletion was successful
#   ansible.builtin.assert:
#     that:
#       - result is changed
#       - result is not failed
