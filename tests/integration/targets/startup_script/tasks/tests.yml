# Copyright (c) 2021, RenÃ© Moser <mail@renemoser.net>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: setup
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    state: absent
  register: result
- name: verify setup
  ansible.builtin.assert:
    that:
      - result is success

- name: test fail if missing name
  vultr.cloud.startup_script:
  register: result
  ignore_errors: true
- name: verify test fail if missing name
  ansible.builtin.assert:
    that:
      - result is failed
      - 'result.msg == "missing required arguments: name"'

- name: test fail if missing params for state=present
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
  register: result
  ignore_errors: true
- name: verify fail if missing params for state=present
  ansible.builtin.assert:
    that:
      - result is failed
      - 'result.msg == "state is present but all of the following are missing: script"'

- name: test create startup script in check mode
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    script: "{{ vultr_startup_script }}"
  register: result
  check_mode: true
- name: verify test create startup script in check mode
  ansible.builtin.assert:
    that:
      - result is changed

- name: test create startup script
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    script: "{{ vultr_startup_script }}"
  register: result
- name: verify test create startup script
  ansible.builtin.assert:
    that:
      - result is changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script

- name: test create startup script idempotence
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    script: "{{ vultr_startup_script }}"
  register: result
- name: verify test create startup script idempotence
  ansible.builtin.assert:
    that:
      - result is not changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script

- name: test update startup script in check mode
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    script: "{{ vultr_startup_script2 }}"
  register: result
  check_mode: true
- name: verify test update startup script in check mode
  ansible.builtin.assert:
    that:
      - result is changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script

- name: test update startup script
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    script: "{{ vultr_startup_script2 }}"
  register: result
- name: verify test update startup script
  ansible.builtin.assert:
    that:
      - result is changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script2

- name: test update startup script idempotence
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    script: "{{ vultr_startup_script2 }}"
  register: result
- name: verify test update startup script idempotence
  ansible.builtin.assert:
    that:
      - result is not changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script2

- name: test absent startup script in check mode
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    state: absent
  register: result
  check_mode: true
- name: verify test absent startup script in check mode
  ansible.builtin.assert:
    that:
      - result is changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script2

- name: test absent startup script
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    state: absent
  register: result
- name: verify test absent startup script
  ansible.builtin.assert:
    that:
      - result is changed
      - result.vultr_startup_script.name == vultr_startup_script_name
      - result.vultr_startup_script.script == vultr_startup_script2

- name: test absent startup script idempotence
  vultr.cloud.startup_script:
    name: "{{ vultr_startup_script_name }}"
    state: absent
  register: result
- name: verify test absent startup script idempotence
  ansible.builtin.assert:
    that:
      - result is not changed
