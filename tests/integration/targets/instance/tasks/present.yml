---
- name: instance info
  ansible.builtin.debug:
    var: instance

- name: test create instance rule in check mode
  vultr.cloud.instance:
    label: "{{ instance.label }}"
    firewall_group: "{{ vultr_instance_firewall_group }}"
    plan: "{{ instance.plan }}"
    ddos_protection: "{{ instance.ddos_protection | default(omit) }}"
    backups: "{{ instance.backups | default(omit) }}"
    enable_ipv6: "{{ instance.enable_ipv6 | default(omit) }}"
    tags: "{{ instance.tags | default(omit) }}"
    region: "{{ instance.region }}"
    os: "{{ instance.os | default(omit) }}"
    app: "{{ instance.app | default(omit) }}"
    image: "{{ instance.image | default(omit) }}"
  register: result
  check_mode: true
- name: verify test create instance rule in check mode
  ansible.builtin.assert:
    that:
      - result is changed

- name: test create instance rule
  vultr.cloud.instance:
    label: "{{ instance.label }}"
    firewall_group: "{{ vultr_instance_firewall_group }}"
    plan: "{{ instance.plan }}"
    ddos_protection: "{{ instance.ddos_protection | default(omit) }}"
    backups: "{{ instance.backups | default(omit) }}"
    enable_ipv6: "{{ instance.enable_ipv6 | default(omit) }}"
    tags: "{{ instance.tags | default(omit) }}"
    region: "{{ instance.region }}"
    os: "{{ instance.os | default(omit) }}"
    app: "{{ instance.app | default(omit) }}"
    image: "{{ instance.image | default(omit) }}"
  register: result
- name: verify test create instance rule
  ansible.builtin.assert:
    that:
      - result is changed

- name: test create instance rule idempotence
  vultr.cloud.instance:
    label: "{{ instance.label }}"
    firewall_group: "{{ vultr_instance_firewall_group }}"
    plan: "{{ instance.plan }}"
    ddos_protection: "{{ instance.ddos_protection | default(omit) }}"
    backups: "{{ instance.backups | default(omit) }}"
    enable_ipv6: "{{ instance.enable_ipv6 | default(omit) }}"
    tags: "{{ instance.tags | default(omit) }}"
    region: "{{ instance.region }}"
    os: "{{ instance.os | default(omit) }}"
    app: "{{ instance.app | default(omit) }}"
    image: "{{ instance.image | default(omit) }}"
  register: result
- name: verify test create instance rule idempotence
  ansible.builtin.assert:
    that:
      - result is not changed

- name: test update instance rule in check mode
  vultr.cloud.instance:
    label: "{{ instance.label }}"
    firewall_group: "{{ vultr_instance_firewall_group }}"
    plan: "{{ instance.plan_update }}"
    ddos_protection: "{{ instance.ddos_protection_update | default(omit) }}"
    backups: "{{ instance.backups_update | default(omit) }}"
    enable_ipv6: "{{ instance.enable_ipv6_update | default(omit) }}"
    tags: "{{ instance.tags_update | default(omit) }}"
    region: "{{ instance.region }}"
    os: "{{ instance.os | default(omit) }}"
    app: "{{ instance.app | default(omit) }}"
    image: "{{ instance.image | default(omit) }}"
  register: result
  check_mode: true
- name: verify test update instance rule in check mode
  ansible.builtin.assert:
    that:
      - result is changed

- name: test update instance rule
  vultr.cloud.instance:
    label: "{{ instance.label }}"
    firewall_group: "{{ vultr_instance_firewall_group }}"
    plan: "{{ instance.plan_update }}"
    ddos_protection: "{{ instance.ddos_protection_update | default(omit) }}"
    backups: "{{ instance.backups_update | default(omit) }}"
    enable_ipv6: "{{ instance.enable_ipv6_update | default(omit) }}"
    tags: "{{ instance.tags_update | default(omit) }}"
    region: "{{ instance.region }}"
    os: "{{ instance.os | default(omit) }}"
    app: "{{ instance.app | default(omit) }}"
    image: "{{ instance.image | default(omit) }}"
  register: result
- name: verify test update instance rule
  ansible.builtin.assert:
    that:
      - result is changed

- name: test update instance rule idempotence
  vultr.cloud.instance:
    label: "{{ instance.label }}"
    firewall_group: "{{ vultr_instance_firewall_group }}"
    plan: "{{ instance.plan_update }}"
    ddos_protection: "{{ instance.ddos_protection_update | default(omit) }}"
    backups: "{{ instance.backups_update | default(omit) }}"
    enable_ipv6: "{{ instance.enable_ipv6_update | default(omit) }}"
    tags: "{{ instance.tags_update | default(omit) }}"
    region: "{{ instance.region }}"
    os: "{{ instance.os | default(omit) }}"
    app: "{{ instance.app | default(omit) }}"
    image: "{{ instance.image | default(omit) }}"
  register: result
- name: verify test update instance rule idempotence
  ansible.builtin.assert:
    that:
      - result is not changed
